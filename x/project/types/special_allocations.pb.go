// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: campaign/special_allocations.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type SpecialAllocations struct {
	GenesisDistribution Shares `protobuf:"bytes,1,rep,name=genesisDistribution,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Coin,castrepeated=Shares" json:"genesisDistribution"`
	ClaimableAirdrop    Shares `protobuf:"bytes,2,rep,name=claimableAirdrop,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Coin,castrepeated=Shares" json:"claimableAirdrop"`
}

func (m *SpecialAllocations) Reset()         { *m = SpecialAllocations{} }
func (m *SpecialAllocations) String() string { return proto.CompactTextString(m) }
func (*SpecialAllocations) ProtoMessage()    {}
func (*SpecialAllocations) Descriptor() ([]byte, []int) {
	return fileDescriptor_52220d02c258acce, []int{0}
}
func (m *SpecialAllocations) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SpecialAllocations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SpecialAllocations.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SpecialAllocations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpecialAllocations.Merge(m, src)
}
func (m *SpecialAllocations) XXX_Size() int {
	return m.Size()
}
func (m *SpecialAllocations) XXX_DiscardUnknown() {
	xxx_messageInfo_SpecialAllocations.DiscardUnknown(m)
}

var xxx_messageInfo_SpecialAllocations proto.InternalMessageInfo

func (m *SpecialAllocations) GetGenesisDistribution() Shares {
	if m != nil {
		return m.GenesisDistribution
	}
	return nil
}

func (m *SpecialAllocations) GetClaimableAirdrop() Shares {
	if m != nil {
		return m.ClaimableAirdrop
	}
	return nil
}

func init() {
	proto.RegisterType((*SpecialAllocations)(nil), "tendermint.spn.campaign.SpecialAllocations")
}

func init() {
	proto.RegisterFile("campaign/special_allocations.proto", fileDescriptor_52220d02c258acce)
}

var fileDescriptor_52220d02c258acce = []byte{
	// 303 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x91, 0xb1, 0x4e, 0x72, 0x31,
	0x14, 0xc7, 0xef, 0xe5, 0x4b, 0x18, 0xee, 0xb7, 0x98, 0xab, 0x89, 0xc8, 0x50, 0x0c, 0x8b, 0x3a,
	0xd8, 0x06, 0x9d, 0x1c, 0x01, 0x9f, 0x40, 0x36, 0x17, 0xd3, 0x96, 0xe6, 0x72, 0xf4, 0xde, 0x9e,
	0xa6, 0xa7, 0x18, 0xdd, 0x9c, 0x9c, 0x7d, 0x04, 0x67, 0x9f, 0x84, 0x91, 0xd1, 0x09, 0x0d, 0xbc,
	0x85, 0x93, 0x81, 0x62, 0x30, 0xd1, 0xd5, 0xa9, 0x4d, 0xce, 0xf9, 0xff, 0x7e, 0xff, 0xb4, 0x59,
	0x5b, 0xcb, 0xca, 0x49, 0x28, 0xac, 0x20, 0x67, 0x34, 0xc8, 0xf2, 0x4a, 0x96, 0x25, 0x6a, 0x19,
	0x00, 0x2d, 0x71, 0xe7, 0x31, 0x60, 0xbe, 0x1b, 0x8c, 0x1d, 0x1a, 0x5f, 0x81, 0x0d, 0x9c, 0x9c,
	0xe5, 0x5f, 0x91, 0xe6, 0x4e, 0x81, 0x05, 0xae, 0x76, 0xc4, 0xf2, 0x16, 0xd7, 0x9b, 0x4c, 0x23,
	0x55, 0x48, 0x42, 0x49, 0x32, 0xe2, 0xb6, 0xa3, 0x4c, 0x90, 0x1d, 0xa1, 0x11, 0x6c, 0x9c, 0xb7,
	0x9f, 0x6b, 0x59, 0x3e, 0x88, 0xb2, 0xee, 0xc6, 0x95, 0x3f, 0xa6, 0xd9, 0x76, 0x61, 0xac, 0x21,
	0xa0, 0x73, 0xa0, 0xe0, 0x41, 0x8d, 0x97, 0x83, 0x46, 0xba, 0xff, 0xef, 0xf0, 0xff, 0xc9, 0x1e,
	0x8f, 0x54, 0xbe, 0xa4, 0xf2, 0x35, 0x95, 0xf7, 0x11, 0x6c, 0xef, 0x6c, 0x32, 0x6b, 0x25, 0x1f,
	0xb3, 0xd6, 0x41, 0x01, 0x61, 0x34, 0x56, 0x5c, 0x63, 0x25, 0xd6, 0x15, 0xe2, 0x71, 0x4c, 0xc3,
	0x1b, 0x11, 0xee, 0x9d, 0xa1, 0x55, 0xe0, 0xe5, 0xad, 0x55, 0x1f, 0x8c, 0xa4, 0x37, 0x74, 0xf1,
	0x9b, 0x30, 0x7f, 0x48, 0xb3, 0x2d, 0x5d, 0x4a, 0xa8, 0xa4, 0x2a, 0x4d, 0x17, 0xfc, 0xd0, 0xa3,
	0x6b, 0xd4, 0xfe, 0xb0, 0xc5, 0x0f, 0x5b, 0xaf, 0x3f, 0x99, 0xb3, 0x74, 0x3a, 0x67, 0xe9, 0xfb,
	0x9c, 0xa5, 0x4f, 0x0b, 0x96, 0x4c, 0x17, 0x2c, 0x79, 0x5d, 0xb0, 0xe4, 0xf2, 0xe8, 0x1b, 0x7e,
	0xf3, 0x2d, 0x82, 0x9c, 0x15, 0x77, 0xc2, 0x79, 0xbc, 0x36, 0x3a, 0x44, 0x8b, 0xaa, 0xaf, 0x9e,
	0xfb, 0xf4, 0x33, 0x00, 0x00, 0xff, 0xff, 0xd8, 0xeb, 0x08, 0x42, 0xe3, 0x01, 0x00, 0x00,
}

func (m *SpecialAllocations) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SpecialAllocations) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SpecialAllocations) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ClaimableAirdrop) > 0 {
		for iNdEx := len(m.ClaimableAirdrop) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ClaimableAirdrop[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSpecialAllocations(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.GenesisDistribution) > 0 {
		for iNdEx := len(m.GenesisDistribution) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.GenesisDistribution[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSpecialAllocations(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintSpecialAllocations(dAtA []byte, offset int, v uint64) int {
	offset -= sovSpecialAllocations(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SpecialAllocations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.GenesisDistribution) > 0 {
		for _, e := range m.GenesisDistribution {
			l = e.Size()
			n += 1 + l + sovSpecialAllocations(uint64(l))
		}
	}
	if len(m.ClaimableAirdrop) > 0 {
		for _, e := range m.ClaimableAirdrop {
			l = e.Size()
			n += 1 + l + sovSpecialAllocations(uint64(l))
		}
	}
	return n
}

func sovSpecialAllocations(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSpecialAllocations(x uint64) (n int) {
	return sovSpecialAllocations(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SpecialAllocations) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSpecialAllocations
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SpecialAllocations: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SpecialAllocations: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GenesisDistribution", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSpecialAllocations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSpecialAllocations
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSpecialAllocations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GenesisDistribution = append(m.GenesisDistribution, github_com_cosmos_cosmos_sdk_types.Coin{})
			if err := m.GenesisDistribution[len(m.GenesisDistribution)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClaimableAirdrop", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSpecialAllocations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSpecialAllocations
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSpecialAllocations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClaimableAirdrop = append(m.ClaimableAirdrop, github_com_cosmos_cosmos_sdk_types.Coin{})
			if err := m.ClaimableAirdrop[len(m.ClaimableAirdrop)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSpecialAllocations(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSpecialAllocations
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSpecialAllocations(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSpecialAllocations
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSpecialAllocations
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSpecialAllocations
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSpecialAllocations
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSpecialAllocations
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSpecialAllocations
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSpecialAllocations        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSpecialAllocations          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSpecialAllocations = fmt.Errorf("proto: unexpected end of group")
)
